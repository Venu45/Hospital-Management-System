A hospital wants to develop an application to maintain the doctor and patient records. The specifications are as follows: A doctor has a unique ID and a list of patients he/she attends to. A patient has a unique ID and a corresponding doctor who treats him/her. A doctor can treat a maximum of P patients and a patient can only be treated by one doctor. Both the doctor and patient IDs are unique integers. Write a code to implement the above system using two different binary search trees (BSTs) to store the doctor and patients profiles respectively. Your code must support the following operations on the BSTs:

Insert a doctor profile: 1 docID
Print -1 if the docID already exists
Insert a patient profile: 2 patientID docID
Print -1 if the patientID already exists or if the doctor has already reached maximum limit or if the doctor ID doesnâ€™t exist. Note that the changes have to be reflected on doctor BST as well
Delete a patient profile: 3 patientID
Print -1 if the patientID does not exit. You are expected to always replace the node being deleted with the rightmost child of its left subtree if it exists. Replace it with the leftmost child of the right subtree otherwise. Note that the changes need to be reflected in the doctor profile as well
Given a docID print the list of his/her patients in the increasing order of their patient IDs : 4 docID
Note that this list could be empty
Given a patientID, print docID of the doctor who treats him/her: 5 patientID
Print all the doctor profiles in preorder: 6
Print all the patients in preorder: 7

Note that you are NOT expected to do any height balancing on the BSTs.
Input Format

Nmbr of operations, N
Max nmbr of patients a doctor can treat, P
N lines of input

Constraints

1 <= N <= 100
0 <= P <= 50
1 <= docID <= 10000
1 <= patientID <= 10000

Output Format

Appropriate output as mentioned in the problem statement

Sample Input 0

25
5
1 8874
1 1516
2 974 8874
1 1516
2 974 1516
2 974 8874
4 8874
5 974
7
3 6686
1 9264
5 974
4 8874
1 1729
2 974 1888
6
5 974
5 974
4 9264
4 8874
1 1470
5 974
1 396
6
7
Sample Output 0

-1
-1
-1
974 
8874
974 
-1
8874
974 
-1
8874 1516 1729 9264 
8874
8874
974 
8874
8874 1516 1470 396 1729 9264 
974
Sample Input 1

20
4
1 4469
1 7180
1 2557
1 2015
2 8042 4469
2 7212 2015
2 8113 4469
2 6628 4469
3 6628
5 8042
3 8113
1 7348
2 8042 3243
3 6632
2 3751 4469
7
1 3711
3 8042
6
7
Sample Output 1

4469
-1
-1
8042 7212 3751 
4469 2557 2015 3711 7180 7348 
7212 3751 
